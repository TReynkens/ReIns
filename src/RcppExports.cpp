// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// stdf_cpp
double stdf_cpp(const NumericVector& x, const int k, const NumericMatrix& R, const double alpha);
RcppExport SEXP _ReIns_stdf_cpp(SEXP xSEXP, SEXP kSEXP, SEXP RSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(stdf_cpp(x, k, R, alpha));
    return rcpp_result_gen;
END_RCPP
}
// stdf2_cpp
double stdf2_cpp(const NumericVector& x, const int k, NumericMatrix& X);
RcppExport SEXP _ReIns_stdf2_cpp(SEXP xSEXP, SEXP kSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(stdf2_cpp(x, k, X));
    return rcpp_result_gen;
END_RCPP
}
// spliceEM_splicefit_raw_Rexport
List spliceEM_splicefit_raw_Rexport(const double pi, const double theta, const IntegerVector shape, const NumericVector beta, const double gamma, const NumericVector lower1, const NumericVector lower2, const NumericVector lower3, const NumericVector lower4, const NumericVector lower5, const NumericVector upper3, const NumericVector upper4, const NumericVector upper5, const double trunclower, const double tsplice, const double truncupper, const double eps, const double beta_tol, const double maxiter);
RcppExport SEXP _ReIns_spliceEM_splicefit_raw_Rexport(SEXP piSEXP, SEXP thetaSEXP, SEXP shapeSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP lower1SEXP, SEXP lower2SEXP, SEXP lower3SEXP, SEXP lower4SEXP, SEXP lower5SEXP, SEXP upper3SEXP, SEXP upper4SEXP, SEXP upper5SEXP, SEXP trunclowerSEXP, SEXP tspliceSEXP, SEXP truncupperSEXP, SEXP epsSEXP, SEXP beta_tolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< const double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower1(lower1SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower2(lower2SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower3(lower3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower4(lower4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower5(lower5SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper3(upper3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper4(upper4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper5(upper5SEXP);
    Rcpp::traits::input_parameter< const double >::type trunclower(trunclowerSEXP);
    Rcpp::traits::input_parameter< const double >::type tsplice(tspliceSEXP);
    Rcpp::traits::input_parameter< const double >::type truncupper(truncupperSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_tol(beta_tolSEXP);
    Rcpp::traits::input_parameter< const double >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(spliceEM_splicefit_raw_Rexport(pi, theta, shape, beta, gamma, lower1, lower2, lower3, lower4, lower5, upper3, upper4, upper5, trunclower, tsplice, truncupper, eps, beta_tol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// spliceEM_shape_adj_Rexport
List spliceEM_shape_adj_Rexport(const double pi, const double theta, const IntegerVector shape, const NumericVector beta, const double gamma, const NumericVector lower1, const NumericVector lower2, const NumericVector lower3, const NumericVector lower4, const NumericVector lower5, const NumericVector upper3, const NumericVector upper4, const NumericVector upper5, const double trunclower, const double tsplice, const double truncupper, const double eps, const double beta_tol, const double maxiter);
RcppExport SEXP _ReIns_spliceEM_shape_adj_Rexport(SEXP piSEXP, SEXP thetaSEXP, SEXP shapeSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP lower1SEXP, SEXP lower2SEXP, SEXP lower3SEXP, SEXP lower4SEXP, SEXP lower5SEXP, SEXP upper3SEXP, SEXP upper4SEXP, SEXP upper5SEXP, SEXP trunclowerSEXP, SEXP tspliceSEXP, SEXP truncupperSEXP, SEXP epsSEXP, SEXP beta_tolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< const double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower1(lower1SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower2(lower2SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower3(lower3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower4(lower4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower5(lower5SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper3(upper3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper4(upper4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper5(upper5SEXP);
    Rcpp::traits::input_parameter< const double >::type trunclower(trunclowerSEXP);
    Rcpp::traits::input_parameter< const double >::type tsplice(tspliceSEXP);
    Rcpp::traits::input_parameter< const double >::type truncupper(truncupperSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_tol(beta_tolSEXP);
    Rcpp::traits::input_parameter< const double >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(spliceEM_shape_adj_Rexport(pi, theta, shape, beta, gamma, lower1, lower2, lower3, lower4, lower5, upper3, upper4, upper5, trunclower, tsplice, truncupper, eps, beta_tol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// spliceEM_shape_red
List spliceEM_shape_red(const double pi_in, const double theta_in, const IntegerVector shape_in, const NumericVector beta_in, const double gamma_in, const NumericVector lower1, const NumericVector lower2, const NumericVector lower3, const NumericVector lower4, const NumericVector lower5, const NumericVector upper3, const NumericVector upper4, const NumericVector upper5, const double trunclower, const double tsplice, const double truncupper, const String criterium, bool improve, const double eps, const double beta_tol, const double maxiter, const bool adj);
RcppExport SEXP _ReIns_spliceEM_shape_red(SEXP pi_inSEXP, SEXP theta_inSEXP, SEXP shape_inSEXP, SEXP beta_inSEXP, SEXP gamma_inSEXP, SEXP lower1SEXP, SEXP lower2SEXP, SEXP lower3SEXP, SEXP lower4SEXP, SEXP lower5SEXP, SEXP upper3SEXP, SEXP upper4SEXP, SEXP upper5SEXP, SEXP trunclowerSEXP, SEXP tspliceSEXP, SEXP truncupperSEXP, SEXP criteriumSEXP, SEXP improveSEXP, SEXP epsSEXP, SEXP beta_tolSEXP, SEXP maxiterSEXP, SEXP adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type pi_in(pi_inSEXP);
    Rcpp::traits::input_parameter< const double >::type theta_in(theta_inSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type shape_in(shape_inSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type beta_in(beta_inSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma_in(gamma_inSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower1(lower1SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower2(lower2SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower3(lower3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower4(lower4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type lower5(lower5SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper3(upper3SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper4(upper4SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type upper5(upper5SEXP);
    Rcpp::traits::input_parameter< const double >::type trunclower(trunclowerSEXP);
    Rcpp::traits::input_parameter< const double >::type tsplice(tspliceSEXP);
    Rcpp::traits::input_parameter< const double >::type truncupper(truncupperSEXP);
    Rcpp::traits::input_parameter< const String >::type criterium(criteriumSEXP);
    Rcpp::traits::input_parameter< bool >::type improve(improveSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_tol(beta_tolSEXP);
    Rcpp::traits::input_parameter< const double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const bool >::type adj(adjSEXP);
    rcpp_result_gen = Rcpp::wrap(spliceEM_shape_red(pi_in, theta_in, shape_in, beta_in, gamma_in, lower1, lower2, lower3, lower4, lower5, upper3, upper4, upper5, trunclower, tsplice, truncupper, criterium, improve, eps, beta_tol, maxiter, adj));
    return rcpp_result_gen;
END_RCPP
}
